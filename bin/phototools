#!/usr/bin/env bash
set -o nounset -o errexit -o pipefail

function take-extension() {
    echo "${1//*./}"
}

function drop-extension() {
    echo "${1//.*/}"
}

function escape-single-quotes() {
    sed "s/'/\\\\'/g"
}

function uppercase() {
    awk '{print toupper($0)}'
}

function get-exif-date() {
    local FORMAT="$1"
    local INPUT_FILE="$2"
    local DATE
    DATE="$(exiftool -p "\${CreateDate}" "$INPUT_FILE" | sed 's/:/-/g;s/ .*//')"
    date -d "$DATE" "$FORMAT"
}

function set-exif-title() {
    local INPUT_FILE="$1"
    local TITLE="$2"
    echo "$TITLE"
    exiftool "-UserComment=$TITLE" "$INPUT_FILE"
}

function get-exif-title() {
    local INPUT_FILE="$1"
    local TITLE=""
    if [[ -z "$TITLE" ]]; then
        TITLE="$(exiftool -m -p '${UserComment}' "$INPUT_FILE")"
    fi
    if [[ -z "$TITLE" ]]; then
        TITLE="$(exiftool -m -p '${HeadLine}' "$INPUT_FILE")"
    fi
    if [[ -z "$TITLE" ]]; then
        echo "$INPUT_FILE has no title" 1>&2
        exit 1
    else
        echo "$TITLE"
    fi
}

function watermark() {
    local INPUT_FILE="$1"
    local OUTPUT_FILE
    local FONT
    local TITLE
    local DATE

    OUTPUT_FILE="$(drop-extension "$INPUT_FILE").jpg"
    FONT="DejaVu-Sans" # Or convert -list font
    TITLE="$(get-exif-title "$INPUT_FILE" | \
                    uppercase | escape-single-quotes)"
    DATE="$(get-exif-date '+%B %Y' "$INPUT_FILE" | uppercase)"

    # Check number of arguments
    if [[ $# != 1 ]]; then
        echo "Usage: $0 picture.tif"
        echo "The UserComment EXIF field must be set to the title."
        exit 1
    fi

    # Check title
    if [[ "$TITLE" = "" ]]; then
        echo "Missing title in user-comment field"
        exit 1
    fi

    # Check extension
    if [[ "$(take-extension "$INPUT_FILE")" != "tif" ]]; then
        echo "Input file should be a TIF"
        exit 1
    fi

    # Convert from TIFF to JPEG, add border and watermark.
    #
    #  -  `"$INPUT_FILE"[0]` selects the first image in the TIFF; this seems to
    #     usually be the main image and [1] seems to be some kind of thumbnail.
    convert                                      \
        -flatten                                 \
        -background black                        \
        -gravity North                           \
        -splice  0x20                            \
        -bordercolor black                       \
        -border 10                               \
        -fill '#aaaaaa'                          \
        -pointsize 20                            \
        -font "$FONT"                            \
        -gravity NorthWest                       \
        -draw "text 10,4 'JASPER VAN DER JEUGT'" \
        -gravity North                           \
        -draw "text 10,4 '$TITLE'"               \
        -gravity NorthEast                       \
        -draw "text 10,4 '$DATE'"                \
        -quality 98                              \
        "$INPUT_FILE"[0]                         \
        "$OUTPUT_FILE"

    # Copy a select number of tags over to the new file.
    exiftool -all= "$OUTPUT_FILE"
    exiftool -TagsFromFile "$INPUT_FILE" -icc_profile "$OUTPUT_FILE"
}

function insta() {
    local INPUT_FILE="$1"
    local OUTPUT_FILE

    OUTPUT_FILE="$(drop-extension "$INPUT_FILE")-Insta.jpg"
    convert                         \
        -resize 1080x1080           \
        -background white           \
        -gravity center             \
        -extent 1080x1080           \
        "$INPUT_FILE"[0]            \
        "$OUTPUT_FILE"

    echo "Wrote $OUTPUT_FILE" 1>&2
}

function import() {
    local SRC_DIR="$1"
    local DST_DIR="$2"

    while IFS= read -r -d '' SRC
    do
        local BASENAME
        local DATE
        local YEAR
        local DST

        DATE="$(get-exif-date '+%Y-%m-%d' "$SRC")"
        local YEAR="${DATE//-*/}"
        BASENAME="$(basename "$SRC")"
        # DST="$DST_DIR/$YEAR/$DATE/$BASENAME"
        DST="$DST_DIR/Capture/"

        mkdir -p "$(dirname "$DST")"
        echo "$SRC -> $DST"
        rsync -v --checksum --partial "$SRC" "$DST"
    done < <(find "$SRC_DIR" \( -iname '*.raf' -o -iname '*.dng' \) -print0)
}

function help() {
    cat - <<HERE
USAGE

$0 command args

COMMANDS

get-exif-title picture.jpg

    Retrieve the photograph title

set-exif-title picture.jpg 'A title'

    Set the photograph title

watermark picture.tif

    Export a watermarked version of picture.tif to picture.jpg

grayscale picture1.tif picture2.tif

    Create a copy of picture1.tif in the grayscale color model

HERE
}

function main() {
    if [[ $# -lt 1 ]]; then
        help
        exit 1
    fi

    case "$1" in
        get-exif-title)
            get-exif-title "$2"
            ;;
        set-exif-title)
            set-exif-title "$2" "$3"
            ;;
        get-exif-date)
            get-exif-date "$2" "$3"
            ;;
        watermark)
            watermark "$2"
            ;;
        insta)
            insta "$2"
            ;;
        import)
            import "$2" "$3"
            ;;
        *)
            help
            exit 1
    esac
}

main "$@"
